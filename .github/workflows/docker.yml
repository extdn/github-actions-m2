name: Docker Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * 0" # 6 AM Weekly
  release:
    types: [published]

jobs:
  build:
    name: "Build and deploy"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        actions-with-docker-image:
          - "magento-coding-standard"
          - "magento-mess-detector"
          - "magento-phpstan"
          - "magento-copy-paste-detector"
          - "magento-unit-tests"
          - "magento-integration-tests"
          - "magento-quick-integration-tests"
          - "php-compatibility"

    env:
      DOCKER_USERNAME: "extdn"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Grab version number"
        uses: "olegtarasov/get-tag@v2.1"
        id: "tagName"

      - name: "Build Docker image"
        run: "docker build --tag extdn/${{ matrix.actions-with-docker-image }}-action:latest ${{ matrix.actions-with-docker-image }}/."

      - name: "Docker Login"
        run: "echo ${{ secrets.DOCKER_PASSWORD }} | $(which docker) login --password-stdin --username ${{ env.DOCKER_USERNAME }}"

      - name: "Push Docker image (latest)"
        run: "docker push extdn/${{ matrix.actions-with-docker-image }}-action:latest"

      - name: "Tag Docker image (versioned)"
        run: "docker tag extdn/${{ matrix.actions-with-docker-image }}-action extdn/${{ matrix.actions-with-docker-image }}-action:${{ steps.tagName.outputs.tag }}"

      - name: "Push Docker image (versioned)"
        run: "docker push extdn/${{ matrix.actions-with-docker-image }}-action:${{ steps.tagName.outputs.tag }}"

      - name: "Docker Logout"
        run: "docker logout"
